version: '3'

networks:
  profile-network:
    name: profile-network
    external: false

services:

  api:
    image: doconnor/movies-api:1.0
    container_name: movies-api
    ports:
      - '9000:9000'
    environment:
      - MONGODB_URI=mongodb://admin:password@mongodb:27017
      - REDIS_URI=redis://redis
      - ENABLE_WRITING_HANDLERS=false 
    depends_on:
      - mongodb
    networks:
      - profile-network      

  redis: #The Redis image does not require variables.
    image: redis:alpine
    container_name: redis
    networks:
      - profile-network

  mongodb:
    container_name: mongoDB 
    image: mongo:8.0-rc
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_PASSWORD}
    networks:
      - profile-network
    

  mongo-express:
    container_name: express
    image: mongo-express:1.0-20-alpine3.19
    restart: always
    ports:
      - 8080:8081
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGODB_USERNAME}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGODB_PASSWORD}
      - ME_CONFIG_MONGODB_SERVER=mongodb
    networks:
      - profile-network
    depends_on:
      - mongodb

# I discovered a strange issue where the username and password set in the yml file for mongo-express do not work, 
# and I can only use the default 'admin' and 'pass'. 
# After reviewing mongo-express log, I found the following situation:  
# express  | Waiting for mongo:27017...
# express  | /docker-entrypoint.sh: line 15: mongo: Name does not resolve
# express  | /docker-entrypoint.sh: line 15: /dev/tcp/mongo/27017: Invalid argument
# express  | Sun Nov  3 21:36:51 UTC 2024 retrying to connect to mongo:27017 (2/10)
# express  | /docker-entrypoint.sh: line 15: mongo: Name does not resolve
# express  | /docker-entrypoint.sh: line 15: /dev/tcp/mongo/27017: Invalid argument
# express  | Sun Nov  3 21:36:55 UTC 2024 retrying to connect to mongo:27017 (3/10)
# express  | /docker-entrypoint.sh: line 15: mongo: Name does not resolve
# express  | /docker-entrypoint.sh: line 15: /dev/tcp/mongo/27017: Invalid argument
# express  | Sun Nov  3 21:36:59 UTC 2024 retrying to connect to mongo:27017 (4/10)
# express  | /docker-entrypoint.sh: line 15: mongo: Name does not resolve
# express  | /docker-entrypoint.sh: line 15: /dev/tcp/mongo/27017: Invalid argument
# express  | Sun Nov  3 21:37:04 UTC 2024 retrying to connect to mongo:27017 (5/10)
# express  | /docker-entrypoint.sh: line 15: mongo: Name does not resolve
# express  | /docker-entrypoint.sh: line 15: /dev/tcp/mongo/27017: Invalid argument
# express  | Sun Nov  3 21:37:08 UTC 2024 retrying to connect to mongo:27017 (6/10)
# express  | /docker-entrypoint.sh: line 15: mongo: Name does not resolve
# express  | /docker-entrypoint.sh: line 15: /dev/tcp/mongo/27017: Invalid argument
# express  | Sun Nov  3 21:37:12 UTC 2024 retrying to connect to mongo:27017 (7/10)
# express  | /docker-entrypoint.sh: line 15: mongo: Name does not resolve
# express  | /docker-entrypoint.sh: line 15: /dev/tcp/mongo/27017: Invalid argument
# express  | Sun Nov  3 21:37:17 UTC 2024 retrying to connect to mongo:27017 (8/10)
# express  | /docker-entrypoint.sh: line 15: mongo: Name does not resolve
# express  | /docker-entrypoint.sh: line 15: /dev/tcp/mongo/27017: Invalid argument
# express  | Sun Nov  3 21:37:21 UTC 2024 retrying to connect to mongo:27017 (9/10)
# express  | /docker-entrypoint.sh: line 15: mongo: Name does not resolve
# express  | /docker-entrypoint.sh: line 15: /dev/tcp/mongo/27017: Invalid argument
# express  | Sun Nov  3 21:37:25 UTC 2024 retrying to connect to mongo:27017 (10/10)
# express  | /docker-entrypoint.sh: line 15: mongo: Name does not resolve
# express  | /docker-entrypoint.sh: line 15: /dev/tcp/mongo/27017: Invalid argument
# express  | No custom config.js found, loading config.default.js
# express  | Welcome to mongo-express 1.0.2
# express  | 
# express  | 
# express  | Mongo Express server listening at http://0.0.0.0:8081
# express  | Server is open to allow connections from anyone (0.0.0.0)
# express  | basicAuth credentials are "admin:pass", it is recommended you change this in your config.js! 
# Finally, mongo-express can only use config.default.js.   
# The same situation occurred in the previous lab about Composeas well.